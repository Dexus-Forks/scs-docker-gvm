name: Docker Build

on:
  push:
    branches: [master]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: [master, dev]

concurrency: ci-${{ github.ref }}

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_NAME_GHCR: ghcr.io/${{ github.repository }}
  IMAGE_NAME_DOCKER: daug/test-github-action

permissions:
  contents: read
  packages: write

jobs:
  build_apks:
    name: Build APKs
    runs-on: ubuntu-latest

    outputs:
      labels: ${{ steps.meta.outputs.labels }}
      tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
          # Required, if artifact is from a different repo
          github_token: ${{secrets.GITHUB_TOKEN}}
          # Required, workflow file name or ID
          workflow: build-apk.yml
          # Optional, will use the branch
          branch: master
          # Optional, uploaded artifact name,
          # will download all artifacts if not specified
          # and extract them in respective subdirectories
          # https://github.com/actions/download-artifact#download-all-artifacts
          name: apk-builds
          # Optional, directory where to extract artifact. Defaults to the artifact name (see `name` input)
          path: ./apk-builds/
          # Optional, defaults to current repo
          repo: Secure-Compliance-Solutions-LLC/GVM-APK-build

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta2
        uses: docker/metadata-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: ${{ env.IMAGE_NAME_DOCKER }},${{ env.IMAGE_NAME_GHCR }}
          tags: |
            type=ref,event=branch,prefix=,suffix=
            type=ref,event=pr,prefix=,suffix=
            type=semver,pattern={{version}},prefix=,suffix=
            type=semver,pattern={{raw}},prefix=,suffix=
            type=semver,pattern={{major}}.{{minor}},prefix=,suffix=
            type=sha,prefix=,suffix=

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta2.outputs.tags }}
          labels: ${{ steps.meta2.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          build-args: |
            SETUP=0

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta3
        uses: docker/metadata-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: ${{ env.IMAGE_NAME_DOCKER }},${{ env.IMAGE_NAME_GHCR }}
          tags: |
            type=ref,event=branch,prefix=,suffix=-full
            type=ref,event=pr,prefix=,suffix=-full
            type=semver,pattern={{version}},prefix=,suffix=-full
            type=semver,pattern={{raw}},prefix=,suffix=-full
            type=semver,pattern={{major}}.{{minor}},prefix=,suffix=-full
            type=sha,prefix=,suffix=-full

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image -full tag
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta3.outputs.tags }}
          labels: ${{ steps.meta3.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          build-args: |
            SETUP=0
            OPT_PDF=1

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta4
        uses: docker/metadata-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: ${{ env.IMAGE_NAME_DOCKER }},${{ env.IMAGE_NAME_GHCR }}
          tags: |
            type=ref,event=branch,prefix=,suffix=-data
            type=ref,event=pr,prefix=,suffix=-data
            type=semver,pattern={{version}},prefix=,suffix=-data
            type=semver,pattern={{raw}},prefix=,suffix=-data
            type=semver,pattern={{major}}.{{minor}},prefix=,suffix=-data
            type=sha,prefix=,suffix=-data

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image with -data tag
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta4.outputs.tags }}
          labels: ${{ steps.meta4.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          build-args: |
            SETUP=1

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta5
        uses: docker/metadata-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: ${{ env.IMAGE_NAME_DOCKER }},${{ env.IMAGE_NAME_GHCR }}
          tags: |
            type=ref,event=branch,prefix=,suffix=-data-full
            type=ref,event=pr,prefix=,suffix=-data-full
            type=semver,pattern={{version}},prefix=,suffix=-data-full
            type=semver,pattern={{raw}},prefix=,suffix=-data-full
            type=semver,pattern={{major}}.{{minor}},prefix=,suffix=-data-full
            type=sha,prefix=,suffix=-data-full

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image with -data-full tag
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta5.outputs.tags }}
          labels: ${{ steps.meta5.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          build-args: |
            SETUP=1
            OPT_PDF=1

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
