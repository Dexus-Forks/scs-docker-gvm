name: Docker Build

on:
  push:
    branches: [master]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: [master]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_NAME_GHCR: ghcr.io/${{ github.repository }}
  IMAGE_NAME_DOCKER: securecompliance/gvm

permissions:
  contents: read
  packages: write

jobs:
  build_apks:
    name: Build APKs
    runs-on: ubuntu-latest

    outputs:
      labels: ${{ steps.meta.outputs.labels }}
      tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to GitHub Container Registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  build_default_image:
    name: Build default image
    needs: build_apks
    runs-on: ubuntu-latest
    steps:
      # Checkout & Login is done in APK Step

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: ${{ env.IMAGE_NAME_DOCKER }},${{ env.IMAGE_NAME_GHCR }}
          tags: |
            type=ref,event=branch,prefix=,suffix=
            type=ref,event=pr,prefix=,suffix=
            type=semver,pattern={{version}},prefix=,suffix=
            type=semver,pattern={{raw}},prefix=,suffix=
            type=semver,pattern={{major}}.{{minor}},prefix=,suffix=
            type=sha,prefix=,suffix=

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.build_apks.outputs.tags }}
          labels: ${{ needs.build_apks.outputs.labels }}
          build-args: |
            SETUP=0

  build_default_image_full:
    name: Build default image
    needs: [build_apks, build_default_image]
    runs-on: ubuntu-latest
    steps:
      # Checkout & Login is done in APK Step

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: ${{ env.IMAGE_NAME_DOCKER }},${{ env.IMAGE_NAME_GHCR }}
          tags: |
            type=ref,event=branch,prefix=,suffix=-full
            type=ref,event=pr,prefix=,suffix=-full
            type=semver,pattern={{version}},prefix=,suffix=-full
            type=semver,pattern={{raw}},prefix=,suffix=-full
            type=semver,pattern={{major}}.{{minor}},prefix=,suffix=-full
            type=sha,prefix=,suffix=-full

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.build_apks.outputs.tags }}
          labels: ${{ needs.build_apks.outputs.labels }}
          build-args: |
            SETUP=0
            OPT_PDF=1

  build_pre_setup_image:
    name: Build pre-setup image
    needs: build_apks
    runs-on: ubuntu-latest
    steps:
      # Checkout & Login is done in APK Step

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: ${{ env.IMAGE_NAME_DOCKER }},${{ env.IMAGE_NAME_GHCR }}
          tags: |
            type=ref,event=branch,prefix=,suffix=-data
            type=ref,event=pr,prefix=,suffix=-data
            type=semver,pattern={{version}},prefix=,suffix=-data
            type=semver,pattern={{raw}},prefix=,suffix=-data
            type=semver,pattern={{major}}.{{minor}},prefix=,suffix=-data
            type=sha,prefix=,suffix=-data

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SETUP=1

  build_pre_setup_image_full:
    name: Build pre-setup image
    needs: [build_apks, build_pre_setup_image]
    runs-on: ubuntu-latest
    steps:
      # Checkout & Login is done in APK Step

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: ${{ env.IMAGE_NAME_DOCKER }},${{ env.IMAGE_NAME_GHCR }}
          tags: |
            type=ref,event=branch,prefix=,suffix=-data-full
            type=ref,event=pr,prefix=,suffix=-data-full
            type=semver,pattern={{version}},prefix=,suffix=-data-full
            type=semver,pattern={{raw}},prefix=,suffix=-data-full
            type=semver,pattern={{major}}.{{minor}},prefix=,suffix=-data-full
            type=sha,prefix=,suffix=-data-full

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SETUP=1
            OPT_PDF=1
